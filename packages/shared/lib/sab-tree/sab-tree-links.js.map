{"version":3,"file":"sab-tree-links.js","sourceRoot":"","sources":["../../src/sab-tree/sab-tree-links.ts"],"names":[],"mappings":"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","sourcesContent":["export const ROOT_ID = 0 as const\nconst NONE = 0xFFFFFFFF as const\n\nconst V_COUNT = 5 as const\nconst PARENT_IDX = 0 as const\nconst FIRST_IDX = 1 as const\nconst LAST_IDX = 2 as const\nconst PREV_IDX = 3 as const\nconst NEXT_IDX = 4 as const\n\nexport class SabTreeLinks {\n  readonly #meta: Uint32Array\n\n  constructor(sab: SharedArrayBuffer, byteOffset: number, cap: number) {\n    this.#meta = new Uint32Array(sab, byteOffset, cap * V_COUNT)\n    this.#meta.fill(NONE)\n  }\n\n  static bytesRequired(cap: number) { return cap * V_COUNT * Uint32Array.BYTES_PER_ELEMENT }\n  get byteLength() { return this.#meta.byteLength }\n\n  #o(id: number) { return id * V_COUNT }\n  parent(id: number) { return this.#meta[this.#o(id) + PARENT_IDX] }\n  #first(id: number) { return this.#meta[this.#o(id) + FIRST_IDX] }\n  #last(id: number) { return this.#meta[this.#o(id) + LAST_IDX] }\n  #next(id: number) { return this.#meta[this.#o(id) + NEXT_IDX] }\n\n  remove(id: number) {\n    const o = this.#o(id)\n    const p = this.#meta[o + PARENT_IDX]\n    const l = this.#meta[o + PREV_IDX]\n    const r = this.#meta[o + NEXT_IDX]\n\n    if (p !== NONE) {\n      const po = this.#o(p)\n      if (this.#meta[po + FIRST_IDX] === id) this.#meta[po + FIRST_IDX] = r\n      if (this.#meta[po + LAST_IDX] === id) this.#meta[po + LAST_IDX] = l\n    }\n    if (l !== NONE) this.#meta[this.#o(l) + NEXT_IDX] = r\n    if (r !== NONE) this.#meta[this.#o(r) + PREV_IDX] = l\n  }\n\n  #linkAsOnlyChild(p: number, c: number) {\n    const po = this.#o(p), co = this.#o(c)\n    this.#meta[co + PARENT_IDX] = p\n    this.#meta[co + PREV_IDX] = NONE\n    this.#meta[co + NEXT_IDX] = NONE\n    this.#meta[po + FIRST_IDX] = c\n    this.#meta[po + LAST_IDX] = c\n  }\n\n  #insertAfterSibling(p: number, left: number, c: number) {\n    const lo = this.#o(left)\n    const right = this.#meta[lo + NEXT_IDX]\n    const co = this.#o(c)\n\n    this.#meta[co + PARENT_IDX] = p\n    this.#meta[co + PREV_IDX] = left\n    this.#meta[co + NEXT_IDX] = right\n\n    this.#meta[lo + NEXT_IDX] = c\n    if (right !== NONE) this.#meta[this.#o(right) + PREV_IDX] = c\n    else this.#meta[this.#o(p) + LAST_IDX] = c\n  }\n\n  #insertBeforeSibling(p: number, right: number, c: number) {\n    const ro = this.#o(right)\n    const left = this.#meta[ro + PREV_IDX]\n    const co = this.#o(c)\n\n    this.#meta[co + PARENT_IDX] = p\n    this.#meta[co + NEXT_IDX] = right\n    this.#meta[co + PREV_IDX] = left\n\n    this.#meta[ro + PREV_IDX] = c\n    if (left !== NONE) this.#meta[this.#o(left) + NEXT_IDX] = c\n    else this.#meta[this.#o(p) + FIRST_IDX] = c\n  }\n\n  insert(p: number, c: number) {\n    this.remove(c)\n    const last = this.#last(p)\n    if (last === NONE) this.#linkAsOnlyChild(p, c)\n    else this.#insertAfterSibling(p, last, c)\n  }\n\n  insertAt(p: number, c: number, idx: number) {\n    this.remove(c)\n\n    const f = this.#first(p)\n    if (f === NONE) { this.#linkAsOnlyChild(p, c); return }\n    if (idx <= 0) { this.#insertBeforeSibling(p, f, c); return }\n\n    let i = 0, cur = f\n    while (cur !== NONE && i < idx) { cur = this.#next(cur); i++ }\n\n    if (cur === NONE) this.insert(p, c)\n    else this.#insertBeforeSibling(p, cur, c)\n  }\n\n  forEach(visitor: (id: number) => void): void {\n    let u: number = ROOT_ID\n    while (true) {\n      visitor(u)\n\n      const f = this.#first(u)\n      if (f !== NONE) { u = f; continue }\n\n      while (true) {\n        if (u === ROOT_ID) return\n        const n = this.#next(u)\n        if (n !== NONE) { u = n; break }\n        u = this.parent(u)\n      }\n    }\n  }\n\n  sortChildren(p: number, getCompValue: (id: number) => number) {\n    let n = 0\n    let head = this.#first(p)\n    while (head !== NONE) { n++; head = this.#next(head) }\n    if (n <= 1) return\n\n    let runSize = 1\n    while (runSize < n) {\n      let mergedHead: number = NONE\n      let mergedTail: number = NONE\n\n      let cur = this.#first(p)\n      while (cur !== NONE) {\n        let left = cur\n        let i = 1\n        while (i < runSize && this.#next(cur) !== NONE) { cur = this.#next(cur); i++ }\n\n        let right = this.#next(cur)\n        const afterRightStart = right\n        this.#meta[this.#o(cur) + NEXT_IDX] = NONE\n        if (right !== NONE) this.#meta[this.#o(right) + PREV_IDX] = NONE\n\n        let nextStart = afterRightStart\n        i = 0\n        while (i < runSize && nextStart !== NONE) { nextStart = this.#next(nextStart); i++ }\n\n        if (nextStart !== NONE) {\n          const prev = this.#meta[this.#o(nextStart) + PREV_IDX]\n          if (prev !== NONE) this.#meta[this.#o(prev) + NEXT_IDX] = NONE\n          this.#meta[this.#o(nextStart) + PREV_IDX] = NONE\n        }\n\n        cur = nextStart\n\n        let merged: number = NONE\n        let mergedT: number = NONE\n        let a = left\n        let b = right\n\n        while (a !== NONE || b !== NONE) {\n          let takeFromA = false\n          if (b === NONE) takeFromA = true\n          else if (a === NONE) takeFromA = false\n          else {\n            const ka = getCompValue(a)\n            const kb = getCompValue(b)\n            takeFromA = (ka <= kb)\n          }\n\n          const id = takeFromA ? a : b\n          if (takeFromA) a = this.#next(a); else b = this.#next(b)\n\n          const no = this.#o(id)\n          this.#meta[no + PREV_IDX] = mergedT\n          this.#meta[no + NEXT_IDX] = NONE\n          this.#meta[no + PARENT_IDX] = p\n\n          if (merged === NONE) merged = id\n          else this.#meta[this.#o(mergedT) + NEXT_IDX] = id\n          mergedT = id\n        }\n\n        if (mergedHead === NONE) mergedHead = merged\n        else {\n          this.#meta[this.#o(mergedTail) + NEXT_IDX] = merged\n          this.#meta[this.#o(merged) + PREV_IDX] = mergedTail\n        }\n        mergedTail = mergedT\n      }\n\n      const po = this.#o(p)\n      this.#meta[po + FIRST_IDX] = mergedHead\n      this.#meta[po + LAST_IDX] = mergedTail\n\n      runSize <<= 1\n    }\n  }\n}\n"]}
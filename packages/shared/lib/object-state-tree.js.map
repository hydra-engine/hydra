{"version":3,"file":"object-state-tree.js","sourceRoot":"","sources":["../src/object-state-tree.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAA;AAE7C,MAAM,QAAQ,GAAG,SAAkB,CAAA;AAEnC,kBAAkB;AAClB,MAAM,aAAa,GAAG,CAAU,CAAA;AAEhC,iBAAiB;AACjB,MAAM,YAAY,GAAG,CAAU,CAAA;AAC/B,MAAM,eAAe,GAAG,CAAU,CAAA;AAClC,MAAM,YAAY,GAAG,CAAU,CAAA;AAE/B,kBAAkB;AAClB,MAAM,aAAa,GAAG,CAAU,CAAA;AAChC,MAAM,KAAK,GAAG,CAAU,CAAA;AACxB,MAAM,KAAK,GAAG,CAAU,CAAA;AAExB,MAAM,OAAO,eAAgB,SAAQ,OAAO;IAC1C,YAAY,GAAsB;QAChC,KAAK,CAAC,GAAG,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAA;IAClE,CAAC;IAED,MAAM,CAAC,aAAa,KAAK,OAAO,OAAO,CAAC,aAAa,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAA,CAAC,CAAC;IAE7G,IAAI,CAAC,EAAU,EAAE,CAAS,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAC7D,IAAI,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAEtD,IAAI,CAAC,EAAU,EAAE,CAAS,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAC7D,IAAI,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAEtD,aAAa,CAAC,EAAU,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IAC/E,aAAa,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA,CAAC,CAAC;IAExE,UAAU,CAAC,EAAU,EAAE,CAAS,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC;IACzE,UAAU,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,CAAA,CAAC,CAAC;CACnE","sourcesContent":["import { SabTree } from './sab-tree/sab-tree'\n\nconst CAPACITY = 1_000_000 as const\n\n// Boolean Indices\nconst BOOLEAN_COUNT = 0 as const\n\n// Uint32 Indices\nconst UINT32_COUNT = 2 as const\nconst OBJECT_TYPE_IDX = 0 as const\nconst ASSET_ID_IDX = 1 as const\n\n// Float32 Indices\nconst FLOAT32_COUNT = 2 as const\nconst X_IDX = 0 as const\nconst Y_IDX = 1 as const\n\nexport class ObjectStateTree extends SabTree {\n  constructor(sab: SharedArrayBuffer) {\n    super(sab, BOOLEAN_COUNT, UINT32_COUNT, FLOAT32_COUNT, CAPACITY)\n  }\n\n  static bytesRequired() { return SabTree.bytesRequired(BOOLEAN_COUNT, UINT32_COUNT, FLOAT32_COUNT, CAPACITY) }\n\n  setX(id: number, v: number) { this.setFloat32(id, X_IDX, v) }\n  getX(id: number) { return this.getFloat32(id, X_IDX) }\n\n  setY(id: number, v: number) { this.setFloat32(id, Y_IDX, v) }\n  getY(id: number) { return this.getFloat32(id, Y_IDX) }\n\n  setObjectType(id: number, v: number) { this.setUint32(id, OBJECT_TYPE_IDX, v) }\n  getObjectType(id: number) { return this.getUint32(id, OBJECT_TYPE_IDX) }\n\n  setAssetId(id: number, v: number) { this.setUint32(id, ASSET_ID_IDX, v) }\n  getAssetId(id: number) { return this.getUint32(id, ASSET_ID_IDX) }\n}\n"]}
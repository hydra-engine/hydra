{"version":3,"file":"game-object.js","sourceRoot":"","sources":["../../../src/logic-node/core/game-object.ts"],"names":[],"mappings":"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","sourcesContent":["import { ObjectStateTree, ObjectType } from '@hydraengine/shared'\nimport { LocalTransform } from './local-transform'\n\nexport type GameObjectOptions = {\n  x?: number\n  y?: number\n  layer?: number\n}\n\nexport class GameObject {\n  type = ObjectType.GameObject\n\n  #id?: number\n  #stateTree?: ObjectStateTree\n\n  #parent?: GameObject\n  #children: GameObject[] = []\n\n  #localTransform = new LocalTransform()\n  alpha = 1\n\n  #layer = 0\n\n  protected _rootConfig(id: number, stateTree: ObjectStateTree) {\n    this.#id = id\n    this.#stateTree = stateTree\n\n    stateTree.setWorldScaleX(id, 1)\n    stateTree.setWorldScaleY(id, 1)\n    stateTree.setWorldCos(id, 1)\n    stateTree.setWorldAlpha(id, 1)\n  }\n\n  constructor(options?: GameObjectOptions) {\n    if (options) {\n      if (options.x !== undefined) this.x = options.x\n      if (options.y !== undefined) this.y = options.y\n      if (options.layer !== undefined) this.layer = options.layer\n    }\n  }\n\n  protected attachToStateTree(parentId: number, stateTree: ObjectStateTree) {\n    this.#detachFromStateTree()\n\n    const id = stateTree.newChild(parentId)\n    stateTree.setObjectType(id, this.type)\n    stateTree.setLocalAlpha(id, this.alpha)\n\n    this.#id = id\n    this.#stateTree = stateTree\n    this.#localTransform.setStateTree(id, stateTree)\n    stateTree.setLayer(id, this.#layer)\n\n    for (const child of this.#children) {\n      child.attachToStateTree(id, stateTree)\n    }\n\n    return id\n  }\n\n  #detachFromStateTree() {\n    if (this.#id !== undefined && this.#stateTree) this.#stateTree.remove(this.#id)\n    this.#id = undefined\n    this.#stateTree = undefined\n    this.#localTransform.clearStateTree()\n  }\n\n  add(...children: GameObject[]) {\n    for (const child of children) {\n\n      if (child.#parent) {\n        const idx = child.#parent.#children.indexOf(child)\n        if (idx !== -1) child.#parent.#children.splice(idx, 1)\n      }\n\n      child.#parent = this\n      this.#children.push(child)\n\n      if (this.#id !== undefined && this.#stateTree) {\n        child.attachToStateTree(this.#id, this.#stateTree)\n      }\n    }\n  }\n\n  remove() {\n    this.#detachFromStateTree()\n\n    if (this.#parent) {\n      const idx = this.#parent.#children.indexOf(this)\n      if (idx !== -1) this.#parent.#children.splice(idx, 1)\n      this.#parent = undefined\n    }\n\n    for (const child of this.#children) {\n      child.#parent = undefined\n      child.remove()\n    }\n    this.#children.length = 0\n  }\n\n  update(dt: number) {\n    for (const child of this.#children) {\n      child.update(dt)\n    }\n  }\n\n  set x(v) { this.#localTransform.x = v }\n  get x() { return this.#localTransform.x }\n\n  set y(v) { this.#localTransform.y = v }\n  get y() { return this.#localTransform.y }\n\n  set layer(v) {\n    if (this.#layer !== v) {\n      this.#layer = v\n\n      if (this.#id !== undefined && this.#stateTree) {\n        this.#stateTree.setLayer(this.#id, v)\n      }\n    }\n  }\n  get layer() { return this.#layer }\n}\n"]}
{"version":3,"file":"rectangle.js","sourceRoot":"","sources":["../../../src/logic-node/ext/rectangle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAmB,UAAU,EAAE,MAAM,qBAAqB,CAAA;AACjE,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAQnE,MAAM,OAAO,aAAc,SAAQ,UAAU;IAC3C,IAAI,GAAG,UAAU,CAAC,SAAS,CAAA;IAE3B,QAAQ,CAAQ;IAChB,MAAM,CAAQ;IACd,OAAO,CAAQ;IAEf,YAAY,OAA6B;QACvC,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAA;QAC7B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAA;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAA;IAC/B,CAAC;IAED,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAA,CAAC,CAAC;IAClC,IAAI,KAAK,CAAC,CAAC;QACT,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;YAEf,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACrC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC;QACV,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;YAEhB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAEkB,iBAAiB,CAAC,QAAgB,EAAE,SAA0B;QAC/E,MAAM,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;QACvD,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QACvC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACnC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACrC,OAAO,EAAE,CAAA;IACX,CAAC;CACF","sourcesContent":["import { ObjectStateTree, ObjectType } from '@hydraengine/shared'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type RectangleNodeOptions = {\n  shape: number\n  width: number\n  height: number\n} & GameObjectOptions\n\nexport class RectangleNode extends GameObject {\n  type = ObjectType.Rectangle\n\n  #shapeId: number\n  #width: number\n  #height: number\n\n  constructor(options: RectangleNodeOptions) {\n    super(options)\n    this.#shapeId = options.shape\n    this.#width = options.width\n    this.#height = options.height\n  }\n\n  get width() { return this.#width }\n  set width(v) {\n    if (this.#width !== v) {\n      this.#width = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setWidth(this.id, v)\n      }\n    }\n  }\n\n  get height() { return this.#height }\n  set height(v) {\n    if (this.#height !== v) {\n      this.#height = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setHeight(this.id, v)\n      }\n    }\n  }\n\n  protected override attachToStateTree(parentId: number, stateTree: ObjectStateTree) {\n    const id = super.attachToStateTree(parentId, stateTree)\n    stateTree.setShapeId(id, this.#shapeId)\n    stateTree.setWidth(id, this.#width)\n    stateTree.setHeight(id, this.#height)\n    return id\n  }\n}\n"]}
{"version":3,"file":"circle.js","sourceRoot":"","sources":["../../../src/logic-node/ext/circle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAmB,UAAU,EAAE,MAAM,qBAAqB,CAAA;AAEjE,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAOnE,MAAM,OAAO,UAAW,SAAQ,UAAU;IACxC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAA;IAExB,QAAQ,CAAQ;IAChB,OAAO,CAAQ;IAEf,YAAY,OAA0B;QACpC,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAA;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAA;IAC/B,CAAC;IAED,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC;QACV,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;YAEhB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAEkB,iBAAiB,CAAC,QAAgB,EAAE,SAA0B,EAAE,aAA4B;QAC7G,MAAM,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;QACtE,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QACvC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACrC,OAAO,EAAE,CAAA;IACX,CAAC;CACF","sourcesContent":["import { ObjectStateTree, ObjectType } from '@hydraengine/shared'\nimport { MessageBridge } from '../../message-bridge'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type CircleNodeOptions = {\n  shape: number\n  radius: number\n} & GameObjectOptions\n\nexport class CircleNode extends GameObject {\n  type = ObjectType.Circle\n\n  #shapeId: number\n  #radius: number\n\n  constructor(options: CircleNodeOptions) {\n    super(options)\n    this.#shapeId = options.shape\n    this.#radius = options.radius\n  }\n\n  get radius() { return this.#radius }\n  set radius(v) {\n    if (!isNaN(v) && this.#radius !== v) {\n      this.#radius = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setRadius(this.id, v)\n      }\n    }\n  }\n\n  protected override attachToStateTree(parentId: number, stateTree: ObjectStateTree, messageBridge: MessageBridge) {\n    const id = super.attachToStateTree(parentId, stateTree, messageBridge)\n    stateTree.setShapeId(id, this.#shapeId)\n    stateTree.setRadius(id, this.#radius)\n    return id\n  }\n}\n"]}
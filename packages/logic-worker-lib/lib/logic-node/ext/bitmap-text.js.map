{"version":3,"file":"bitmap-text.js","sourceRoot":"","sources":["../../../src/logic-node/ext/bitmap-text.ts"],"names":[],"mappings":"AAAA,OAAO,EAAmB,UAAU,EAAE,MAAM,qBAAqB,CAAA;AAGjE,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAOnE,MAAM,OAAO,cAAwC,SAAQ,UAAa;IACxE,IAAI,GAAG,UAAU,CAAC,UAAU,CAAA;IAE5B,MAAM,CAAQ;IACd,KAAK,CAAQ;IAEb,YAAY,OAA8B;QACxC,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAA;QAC3B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAA;IAC3B,CAAC;IAED,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAA,CAAC,CAAC;IAClC,IAAI,KAAK,CAAC,CAAC;QACT,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;YAEf,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAEkB,iBAAiB,CAAC,QAAgB,EAAE,SAA0B,EAAE,aAA4B;QAC7G,MAAM,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;QACtE,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACrC,aAAa,CAAC,sBAAsB,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;QACpD,OAAO,EAAE,CAAA;IACX,CAAC;CACF","sourcesContent":["import { ObjectStateTree, ObjectType } from '@hydraengine/shared'\nimport { EventMap } from '@webtaku/event-emitter'\nimport { MessageBridge } from '../../message-bridge'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type BitmapTextNodeOptions = {\n  asset: number\n  text: string\n} & GameObjectOptions\n\nexport class BitmapTextNode<E extends EventMap = {}> extends GameObject<E> {\n  type = ObjectType.BitmapText\n\n  #asset: number\n  #text: string\n\n  constructor(options: BitmapTextNodeOptions) {\n    super(options)\n    this.#asset = options.asset\n    this.#text = options.text\n  }\n\n  get asset() { return this.#asset }\n  set asset(v) {\n    if (this.#asset !== v) {\n      this.#asset = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setAssetId(this.id, v)\n      }\n    }\n  }\n\n  protected override attachToStateTree(parentId: number, stateTree: ObjectStateTree, messageBridge: MessageBridge) {\n    const id = super.attachToStateTree(parentId, stateTree, messageBridge)\n    stateTree.setAssetId(id, this.#asset)\n    messageBridge.sendTextToRenderWorker(id, this.#text)\n    return id\n  }\n}\n"]}
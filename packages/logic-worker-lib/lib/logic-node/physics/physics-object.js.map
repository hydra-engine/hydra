{"version":3,"file":"physics-object.js","sourceRoot":"","sources":["../../../src/logic-node/physics/physics-object.ts"],"names":[],"mappings":"AAAA,OAAO,EAAmB,UAAU,EAAE,MAAM,qBAAqB,CAAA;AAGjE,OAAO,EAAE,UAAU,EAAqB,MAAM,qBAAqB,CAAA;AAQnE,MAAM,OAAO,aAAuC,SAAQ,UAAa;IACvE,IAAI,GAAG,UAAU,CAAC,aAAa,CAAA;IAE/B,OAAO,CAAQ;IACf,UAAU,CAAQ;IAClB,UAAU,CAAQ;IAElB,YAAY,OAA6B;QACvC,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAA;QAC3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC,CAAA;QACxC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC,CAAA;IAC1C,CAAC;IAEkB,iBAAiB,CAAC,QAAgB,EAAE,SAA0B,EAAE,aAA4B;QAC7G,MAAM,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;QACtE,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACrC,SAAS,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QAC3C,SAAS,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QAC3C,OAAO,EAAE,CAAA;IACX,CAAC;IAED,IAAI,IAAI,CAAC,CAAS;QAChB,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;YAEhB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IAElC,IAAI,SAAS,CAAC,CAAS;QACrB,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA;YAEnB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACzC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,UAAU,CAAA,CAAC,CAAC;IAE1C,IAAI,SAAS,CAAC,CAAS;QACrB,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA;YAEnB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACzC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,UAAU,CAAA,CAAC,CAAC;CAC3C","sourcesContent":["import { ObjectStateTree, ObjectType } from '@hydraengine/shared'\nimport { EventMap } from '@webtaku/event-emitter'\nimport { MessageBridge } from '../../message-bridge'\nimport { GameObject, GameObjectOptions } from '../core/game-object'\n\nexport type PhysicsObjectOptions = {\n  body: number\n  velocityX?: number\n  velocityY?: number\n} & GameObjectOptions\n\nexport class PhysicsObject<E extends EventMap = {}> extends GameObject<E> {\n  type = ObjectType.PhysicsObject\n\n  #bodyId: number\n  #velocityX: number\n  #velocityY: number\n\n  constructor(options: PhysicsObjectOptions) {\n    super(options)\n    this.#bodyId = options.body\n    this.#velocityX = options.velocityX ?? 0\n    this.#velocityY = options.velocityY ?? 0\n  }\n\n  protected override attachToStateTree(parentId: number, stateTree: ObjectStateTree, messageBridge: MessageBridge) {\n    const id = super.attachToStateTree(parentId, stateTree, messageBridge)\n    stateTree.setBodyId(id, this.#bodyId)\n    stateTree.setVelocityX(id, this.#velocityX)\n    stateTree.setVelocityY(id, this.#velocityY)\n    return id\n  }\n\n  set body(v: number) {\n    if (this.#bodyId !== v) {\n      this.#bodyId = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setBodyId(this.id, v)\n      }\n    }\n  }\n\n  get body() { return this.#bodyId }\n\n  set velocityX(v: number) {\n    if (this.#velocityX !== v) {\n      this.#velocityX = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setVelocityX(this.id, v)\n      }\n    }\n  }\n\n  get velocityX() { return this.#velocityX }\n\n  set velocityY(v: number) {\n    if (this.#velocityY !== v) {\n      this.#velocityY = v\n\n      if (this.id !== undefined && this.stateTree) {\n        this.stateTree.setVelocityY(this.id, v)\n      }\n    }\n  }\n\n  get velocityY() { return this.#velocityY }\n}\n"]}
{"version":3,"file":"animated-sprite.js","sourceRoot":"","sources":["../../src/rendering-node/animated-sprite.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,IAAI,kBAAkB,EAAe,MAAM,SAAS,CAAA;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAA;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,OAAO,kBAAmB,SAAQ,cAAc;IACpD,QAAQ,CAAQ;IAChB,UAAU,CAAQ;IAClB,IAAI,CAAQ;IACZ,KAAK,CAAS;IAEd,MAAM,CAAc;IACpB,OAAO,CAAqB;IAE5B,YAAY,OAAe,EAAE,SAAiB,EAAE,GAAW,EAAE,IAAa;QACxE,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;QAC3B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAA;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjD,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC1D,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,2CAA2C,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;YACxE,IAAI,CAAC,MAAM,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC3D,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACzB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA;QACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;QAExB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC7C,OAAO,CAAC,KAAK,CAAC,wBAAwB,IAAI,CAAC,UAAU,EAAE,CAAC,CAAA;gBACxD,OAAM;YACR,CAAC;YAED,MAAM,CAAC,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;YACzE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YACtB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAA;YACnB,CAAC,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;YACxC,CAAC,CAAC,IAAI,EAAE,CAAA;YAER,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;QAClB,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACxC,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { AnimatedSprite as PixiAnimatedSprite, Spritesheet } from 'pixi.js'\nimport { spritesheetLoader } from '../loaders/spritesheet'\nimport { RenderableNode } from './renderable'\n\nexport class AnimatedSpriteNode extends RenderableNode {\n  #assetId: number\n  #animation: string\n  #fps: number\n  #loop: boolean\n\n  #sheet?: Spritesheet\n  #sprite?: PixiAnimatedSprite\n\n  constructor(assetId: number, animation: string, fps: number, loop: boolean) {\n    super()\n    this.#assetId = assetId\n    this.#animation = animation\n    this.#fps = fps\n    this.#loop = loop\n    this.#load()\n  }\n\n  async #load() {\n    if (spritesheetLoader.checkCached(this.#assetId)) {\n      this.#sheet = spritesheetLoader.getCached(this.#assetId)\n    } else {\n      console.info(`Spritesheet not preloaded. Loading now: ${this.#assetId}`)\n      this.#sheet = await spritesheetLoader.load(this.#assetId)\n    }\n\n    this.#updateAnimation()\n  }\n\n  #updateAnimation() {\n    this.#sprite?.destroy()\n    this.#sprite = undefined\n\n    if (this.#sheet) {\n      if (!this.#sheet.animations[this.#animation]) {\n        console.error(`Animation not found: ${this.#animation}`)\n        return\n      }\n\n      const s = new PixiAnimatedSprite(this.#sheet.animations[this.#animation])\n      s.anchor.set(0.5, 0.5)\n      s.loop = this.#loop\n      s.animationSpeed = (this.#fps ?? 0) / 60\n      s.play()\n\n      this.pixiContainer.addChild(s)\n      this.#sprite = s\n    }\n  }\n\n  override remove() {\n    spritesheetLoader.release(this.#assetId)\n    super.remove()\n  }\n}\n"]}
{"version":3,"file":"animated-sprite.js","sourceRoot":"","sources":["../../src/rendering-node/animated-sprite.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,IAAI,kBAAkB,EAAE,MAAM,SAAS,CAAA;AAC9D,OAAO,EAAmB,iBAAiB,EAAE,MAAM,wBAAwB,CAAA;AAC3E,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,OAAO,kBAAmB,SAAQ,cAAc;IACpD,QAAQ,CAAQ;IAChB,UAAU,CAAQ;IAElB,KAAK,CAAkB;IACvB,OAAO,CAAqB;IAE5B,YAAY,OAAe,EAAE,SAAiB;QAC5C,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;QAC3B,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjD,IAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACzD,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,2CAA2C,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;YACxE,IAAI,CAAC,KAAK,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC1D,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACzB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA;QACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;QAExB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;QACpB,IAAI,CAAC,EAAE,CAAC;YACN,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBACnD,OAAO,CAAC,KAAK,CAAC,wBAAwB,IAAI,CAAC,UAAU,EAAE,CAAC,CAAA;gBACxD,OAAM;YACR,CAAC;YAED,MAAM,CAAC,GAAG,IAAI,kBAAkB,CAAC,CAAC,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;YAC/E,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAEtB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YAC7C,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAA;YACf,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAA;YAC7B,CAAC,CAAC,IAAI,EAAE,CAAA;YAER,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;QAClB,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACxC,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { AnimatedSprite as PixiAnimatedSprite } from 'pixi.js'\nimport { SpritesheetData, spritesheetLoader } from '../loaders/spritesheet'\nimport { RenderableNode } from './renderable'\n\nexport class AnimatedSpriteNode extends RenderableNode {\n  #assetId: number\n  #animation: string\n\n  #data?: SpritesheetData\n  #sprite?: PixiAnimatedSprite\n\n  constructor(assetId: number, animation: string) {\n    super()\n    this.#assetId = assetId\n    this.#animation = animation\n    this.#load()\n  }\n\n  async #load() {\n    if (spritesheetLoader.checkCached(this.#assetId)) {\n      this.#data = spritesheetLoader.getCached(this.#assetId)\n    } else {\n      console.info(`Spritesheet not preloaded. Loading now: ${this.#assetId}`)\n      this.#data = await spritesheetLoader.load(this.#assetId)\n    }\n\n    this.#updateAnimation()\n  }\n\n  #updateAnimation() {\n    this.#sprite?.destroy()\n    this.#sprite = undefined\n\n    const d = this.#data\n    if (d) {\n      if (!d.pixiSpritesheet.animations[this.#animation]) {\n        console.error(`Animation not found: ${this.#animation}`)\n        return\n      }\n\n      const s = new PixiAnimatedSprite(d.pixiSpritesheet.animations[this.#animation])\n      s.anchor.set(0.5, 0.5)\n\n      const a = d.atlas.animations[this.#animation]\n      s.loop = a.loop\n      s.animationSpeed = a.fps / 60\n      s.play()\n\n      this.pixiContainer.addChild(s)\n      this.#sprite = s\n    }\n  }\n\n  override remove() {\n    spritesheetLoader.release(this.#assetId)\n    super.remove()\n  }\n}\n"]}
{"version":3,"file":"circle.js","sourceRoot":"","sources":["../../src/rendering-node/circle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,QAAQ,EAAe,MAAM,SAAS,CAAA;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,OAAO,UAAW,SAAQ,cAAwB;IACtD,OAAO,CAAQ;IACf,KAAK,CAAY;IACjB,OAAO,CAAc;IAErB,YAAY,MAAc,EAAE,IAA2B,EAAE,MAA+B;QACtF,KAAK,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAA;QAErB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QAErB,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACrD,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACnD,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAC3D,CAAC;IAED,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;IAEhD,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,CAAA,CAAC,CAAC;IAChC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;IAE5C,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;CACjD","sourcesContent":["import { FillInput, Graphics, StrokeInput } from 'pixi.js'\nimport { RenderableNode } from './renderable'\n\nexport class CircleNode extends RenderableNode<Graphics> {\n  #radius: number\n  #fill?: FillInput\n  #stroke?: StrokeInput\n\n  constructor(radius: number, fill: FillInput | undefined, stroke: StrokeInput | undefined) {\n    super(new Graphics())\n\n    this.#radius = radius\n    this.#fill = fill\n    this.#stroke = stroke\n\n    this.#draw()\n  }\n\n  #draw() {\n    this.pixiContainer.clear().circle(0, 0, this.#radius)\n    if (this.#fill) this.pixiContainer.fill(this.#fill)\n    if (this.#stroke) this.pixiContainer.stroke(this.#stroke)\n  }\n\n  get radius() { return this.#radius }\n  set radius(v) { this.#radius = v; this.#draw() }\n\n  get fill() { return this.#fill }\n  set fill(v) { this.#fill = v; this.#draw() }\n\n  get stroke() { return this.#stroke }\n  set stroke(v) { this.#stroke = v; this.#draw() }\n}\n"]}
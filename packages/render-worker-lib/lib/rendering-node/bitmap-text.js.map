{"version":3,"file":"bitmap-text.js","sourceRoot":"","sources":["../../src/rendering-node/bitmap-text.ts"],"names":[],"mappings":"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","sourcesContent":["import { Container, Rectangle as PixiRectangle, Sprite as PixiSprite, Texture as PixiTexture } from 'pixi.js'\nimport { BitmapFont } from '../bitmap-font'\nimport { bitmapFontLoader } from '../loaders/bitmap-font'\nimport { RenderableNode } from './renderable'\n\nexport class BitmapTextNode extends RenderableNode {\n  #assetId: number\n  #fnt: string\n  #src: string\n  #font?: BitmapFont\n  #text?: string\n  #sprites: PixiSprite[] = []\n\n  constructor(assetId: number, fnt: string, src: string) {\n    super(new Container())\n    this.#assetId = assetId\n    this.#fnt = fnt\n    this.#src = src\n    this.#load()\n  }\n\n  async #load() {\n    if (bitmapFontLoader.checkCached(this.#assetId)) {\n      this.#font = bitmapFontLoader.getCached(this.#assetId)\n    } else {\n      console.info(`Bitmap font not preloaded. Loading now: ${this.#fnt}`)\n      this.#font = await bitmapFontLoader.load(this.#assetId, this.#fnt, this.#src)\n    }\n  }\n\n  set text(v: string) {\n    if (v !== this.#text) {\n      this.#text = v\n\n      if (!this.#font) return\n\n      for (const sprite of this.#sprites) {\n        sprite.destroy()\n      }\n      this.#sprites = []\n\n      let xPos = 0, yPos = 0\n      let minX = Infinity, minY = Infinity\n      let maxX = -Infinity, maxY = -Infinity\n\n      for (let i = 0; i < v.length; i++) {\n        const charCode = v.charCodeAt(i)\n\n        if (charCode === 10) {\n          xPos = 0\n          yPos += this.#font.lineHeight\n          continue\n        }\n\n        const c = this.#font.chars[charCode]\n        if (!c) continue\n\n        const frame = new PixiRectangle(c.x, c.y, c.width, c.height)\n        const texture = new PixiTexture({ source: this.#font.texture.source, frame })\n        const sprite = new PixiSprite(texture)\n\n        const x0 = xPos + c.xoffset\n        const y0 = yPos + c.yoffset\n\n        sprite.x = x0\n        sprite.y = y0\n\n        this.#sprites.push(sprite)\n\n        const x1 = x0 + c.width\n        const y1 = y0 + c.height\n\n        if (x0 < minX) minX = x0\n        if (y0 < minY) minY = y0\n        if (x1 > maxX) maxX = x1\n        if (y1 > maxY) maxY = y1\n\n        xPos += c.xadvance\n      }\n\n      if (minX === Infinity) {\n        minX = 0\n        minY = 0\n      }\n\n      if (maxX === -Infinity) {\n        maxX = 0\n        maxY = 0\n      }\n\n      const width = maxX - minX\n      const height = maxY - minY\n\n      for (const s of this.#sprites) {\n        s.x -= width / 2\n        s.y -= height / 2\n        this.pixiContainer.addChild(s)\n      }\n    }\n  }\n\n  get text() {\n    return this.#text ?? ''\n  }\n\n  override remove() {\n    bitmapFontLoader.release(this.#assetId)\n    super.remove()\n  }\n}\n"]}
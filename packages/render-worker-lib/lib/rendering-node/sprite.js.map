{"version":3,"file":"sprite.js","sourceRoot":"","sources":["../../src/rendering-node/sprite.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,UAAU,EAAE,MAAM,SAAS,CAAA;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAA;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,OAAO,UAAW,SAAQ,cAAc;IAC5C,QAAQ,CAAQ;IAChB,OAAO,CAAa;IAEpB,YAAY,OAAe;QACzB,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,OAAO,CAAA;QACX,IAAI,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7C,OAAO,GAAG,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAClD,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,uCAAuC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;YACpE,OAAO,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACnD,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA;QACvB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAA;QAExB,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAA;YACnE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;QAClB,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACpC,KAAK,CAAC,MAAM,EAAE,CAAA;IAChB,CAAC;CACF","sourcesContent":["import { Sprite as PixiSprite } from 'pixi.js'\nimport { textureLoader } from '../loaders/texture'\nimport { RenderableNode } from './renderable'\n\nexport class SpriteNode extends RenderableNode {\n  #assetId: number\n  #sprite?: PixiSprite\n\n  constructor(assetId: number) {\n    super()\n    this.#assetId = assetId\n    this.#load()\n  }\n\n  async #load() {\n    let texture\n    if (textureLoader.checkCached(this.#assetId)) {\n      texture = textureLoader.getCached(this.#assetId)\n    } else {\n      console.info(`Texture not preloaded. Loading now: ${this.#assetId}`)\n      texture = await textureLoader.load(this.#assetId)\n    }\n\n    this.#sprite?.destroy()\n    this.#sprite = undefined\n\n    if (texture) {\n      const s = new PixiSprite({ texture, anchor: 0.5, zIndex: -999999 })\n      this.pixiContainer.addChild(s)\n      this.#sprite = s\n    }\n  }\n\n  override remove() {\n    textureLoader.release(this.#assetId)\n    super.remove()\n  }\n}\n"]}
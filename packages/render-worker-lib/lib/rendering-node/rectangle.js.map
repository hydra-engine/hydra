{"version":3,"file":"rectangle.js","sourceRoot":"","sources":["../../src/rendering-node/rectangle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAa,QAAQ,EAAe,MAAM,SAAS,CAAA;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,OAAO,aAAc,SAAQ,cAAwB;IACzD,MAAM,CAAQ;IACd,OAAO,CAAQ;IACf,KAAK,CAAY;IACjB,OAAO,CAAc;IAErB,YAAY,KAAa,EAAE,MAAc,EAAE,IAA2B,EAAE,MAA+B;QACrG,KAAK,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAA;QAErB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QAErB,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,IAAI,CAC7B,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAChB,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CACb,CAAA;QACD,IAAI,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACnD,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAC3D,CAAC;IAED,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAA,CAAC,CAAC;IAClC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;IAE9C,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;IAEhD,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,CAAA,CAAC,CAAC;IAChC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;IAE5C,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,CAAC,CAAC;CACjD","sourcesContent":["import { FillInput, Graphics, StrokeInput } from 'pixi.js'\nimport { RenderableNode } from './renderable'\n\nexport class RectangleNode extends RenderableNode<Graphics> {\n  #width: number\n  #height: number\n  #fill?: FillInput\n  #stroke?: StrokeInput\n\n  constructor(width: number, height: number, fill: FillInput | undefined, stroke: StrokeInput | undefined) {\n    super(new Graphics())\n\n    this.#width = width\n    this.#height = height\n    this.#fill = fill\n    this.#stroke = stroke\n\n    this.#draw()\n  }\n\n  #draw() {\n    this.pixiContainer.clear().rect(\n      -this.#width / 2,\n      -this.#height / 2,\n      this.#width,\n      this.#height,\n    )\n    if (this.#fill) this.pixiContainer.fill(this.#fill)\n    if (this.#stroke) this.pixiContainer.stroke(this.#stroke)\n  }\n\n  get width() { return this.#width }\n  set width(v) { this.#width = v; this.#draw() }\n\n  get height() { return this.#height }\n  set height(v) { this.#height = v; this.#draw() }\n\n  get fill() { return this.#fill }\n  set fill(v) { this.#fill = v; this.#draw() }\n\n  get stroke() { return this.#stroke }\n  set stroke(v) { this.#stroke = v; this.#draw() }\n}\n"]}